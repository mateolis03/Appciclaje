// Generated by view binder compiler. Do not edit!
package unipiloto.edu.co.appiclaje.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import unipiloto.edu.co.appiclaje.R;

public final class ActivityPublicarSolicitudBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText addressSoli;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final EditText peso;

  @NonNull
  public final TextView publicar;

  @NonNull
  public final Button publicarButton;

  @NonNull
  public final TextView texto2;

  @NonNull
  public final EditText tipo;

  @NonNull
  public final Button volverButton;

  private ActivityPublicarSolicitudBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText addressSoli, @NonNull ImageView logo, @NonNull EditText peso,
      @NonNull TextView publicar, @NonNull Button publicarButton, @NonNull TextView texto2,
      @NonNull EditText tipo, @NonNull Button volverButton) {
    this.rootView = rootView;
    this.addressSoli = addressSoli;
    this.logo = logo;
    this.peso = peso;
    this.publicar = publicar;
    this.publicarButton = publicarButton;
    this.texto2 = texto2;
    this.tipo = tipo;
    this.volverButton = volverButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPublicarSolicitudBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPublicarSolicitudBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_publicar_solicitud, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPublicarSolicitudBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressSoli;
      EditText addressSoli = ViewBindings.findChildViewById(rootView, id);
      if (addressSoli == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.peso;
      EditText peso = ViewBindings.findChildViewById(rootView, id);
      if (peso == null) {
        break missingId;
      }

      id = R.id.publicar;
      TextView publicar = ViewBindings.findChildViewById(rootView, id);
      if (publicar == null) {
        break missingId;
      }

      id = R.id.publicarButton;
      Button publicarButton = ViewBindings.findChildViewById(rootView, id);
      if (publicarButton == null) {
        break missingId;
      }

      id = R.id.texto2;
      TextView texto2 = ViewBindings.findChildViewById(rootView, id);
      if (texto2 == null) {
        break missingId;
      }

      id = R.id.tipo;
      EditText tipo = ViewBindings.findChildViewById(rootView, id);
      if (tipo == null) {
        break missingId;
      }

      id = R.id.volverButton;
      Button volverButton = ViewBindings.findChildViewById(rootView, id);
      if (volverButton == null) {
        break missingId;
      }

      return new ActivityPublicarSolicitudBinding((ConstraintLayout) rootView, addressSoli, logo,
          peso, publicar, publicarButton, texto2, tipo, volverButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
